version: "3.3"

services:
  user_app:
    build:
      dockerfile: services/user_management/deployment/Dockerfile
      context: .
    command: uvicorn services.user_management.main:app --reload --port=8001 --host=0.0.0.0
    ports:
      - "8001:8001"
    environment:
      KAFKA_ENDPOINT: "broker:9092"
    volumes:
      - ./:/app

  # store_app:
  #   build:
  #     dockerfile: services/store_management/deployment/Dockerfile
  #     context: .
  #   command: uvicorn services.store_management.main:app --reload
  #   environment:
  #     KAFKA_ENDPOINT: "broker:9092"
  #   volumes:
  #     - ./:/app

  order_app:
    build:
      dockerfile: services/order_management/deployment/Dockerfile
      context: .
    command: uvicorn services.order_management.main:app --reload --port=8003 --host=0.0.0.0
    ports:
      - "8003:8003"
    environment:
      KAFKA_ENDPOINT: "broker:9092"
    volumes:
      - ./:/app

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  # store_postgres:
  #   image: postgres
  #   restart: always
  #   ports: 
  #     - 0.0.0.0:5435:5432
  #   volumes:
  #     - ./store_db_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: 12345
  #     POSTGRES_USER: postgres
  #     POSTGRES_DB: postgres